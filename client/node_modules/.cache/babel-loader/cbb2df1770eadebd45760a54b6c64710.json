{"ast":null,"code":"var _jsxFileName = \"F:\\\\mern\\\\codedamn\\\\TWO_FULL-MERN-STACK-CODEDAMN\\\\client\\\\src\\\\Pages\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DashBoard = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [quote, setQuote] = useState('');\n  cosnt[(tempQuote, setTempQuote)] = useState('');\n\n  const populateQuate = async () => {\n    const req = await fetch(\"http://localhost:8003/api/quote\", {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\")\n      }\n    });\n    const data = req.json();\n\n    if (data.status === \"ok\") {\n      setQuote(data.quote);\n    } else {\n      alert(data.error);\n    }\n  };\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      const user = jwt_decode(token);\n\n      if (!user) {\n        localStorage.removeItem(\"token\");\n        navigate(\"/login\");\n      } else {\n        populateQuate();\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Your quote: \", quote || \"NOT QUOTE FOUND\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: tempQuote,\n        placeholder: \"Quote\",\n        onChange: e => setTempQuote(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 10\n  }, this);\n};\n\n_s(DashBoard, \"tNY03r1Hwpx5CQdMtpFw97yYW0E=\", false, function () {\n  return [useNavigate];\n});\n\n_c = DashBoard;\nexport default DashBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashBoard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jwt_decode","DashBoard","navigate","quote","setQuote","cosnt","tempQuote","setTempQuote","populateQuate","req","fetch","headers","localStorage","getItem","data","json","status","alert","error","token","user","removeItem","e","target","value"],"sources":["F:/mern/codedamn/TWO_FULL-MERN-STACK-CODEDAMN/client/src/Pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst DashBoard = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [quote, setQuote] = useState('');\r\n  cosnt [tempQuote, setTempQuote] = useState('');\r\n\r\n  const populateQuate = async () => {\r\n    const req = await fetch(\"http://localhost:8003/api/quote\", {\r\n      headers: {\r\n        \"x-access-token\": localStorage.getItem(\"token\"),\r\n      },\r\n    });\r\n\r\n    const data = req.json();\r\n    if(data.status === \"ok\"){\r\n        setQuote(data.quote);\r\n    }else{\r\n        alert(data.error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      const user = jwt_decode(token);\r\n      if (!user) {\r\n        localStorage.removeItem(\"token\");\r\n        navigate(\"/login\");\r\n      } else {\r\n        populateQuate();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return <div>\r\n      <h1>Your quote: {quote || \"NOT QUOTE FOUND\"}</h1>\r\n      <form>\r\n          <input type=\"text\" value={tempQuote} placeholder= \"Quote\" onChange={(e) => setTempQuote(e.target.value)} />\r\n      </form>\r\n  </div>;\r\n};\r\n\r\nexport default DashBoard;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACtB,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;EAEA,MAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;EACAQ,KAAK,EAAEC,SAAS,EAAEC,YAAb,EAAL,GAAkCV,QAAQ,CAAC,EAAD,CAA1C;;EAEA,MAAMW,aAAa,GAAG,YAAY;IAChC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAD,EAAoC;MACzDC,OAAO,EAAE;QACP,kBAAkBC,YAAY,CAACC,OAAb,CAAqB,OAArB;MADX;IADgD,CAApC,CAAvB;IAMA,MAAMC,IAAI,GAAGL,GAAG,CAACM,IAAJ,EAAb;;IACA,IAAGD,IAAI,CAACE,MAAL,KAAgB,IAAnB,EAAwB;MACpBZ,QAAQ,CAACU,IAAI,CAACX,KAAN,CAAR;IACH,CAFD,MAEK;MACDc,KAAK,CAACH,IAAI,CAACI,KAAN,CAAL;IACH;EACF,CAbD;;EAeApB,SAAS,CAAC,MAAM;IACd,MAAMqB,KAAK,GAAGP,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;IACA,IAAIM,KAAJ,EAAW;MACT,MAAMC,IAAI,GAAGpB,UAAU,CAACmB,KAAD,CAAvB;;MACA,IAAI,CAACC,IAAL,EAAW;QACTR,YAAY,CAACS,UAAb,CAAwB,OAAxB;QACAnB,QAAQ,CAAC,QAAD,CAAR;MACD,CAHD,MAGO;QACLM,aAAa;MACd;IACF;EACF,CAXQ,EAWN,EAXM,CAAT;EAaA,oBAAO;IAAA,wBACH;MAAA,2BAAiBL,KAAK,IAAI,iBAA1B;IAAA;MAAA;MAAA;MAAA;IAAA,QADG,eAEH;MAAA,uBACI;QAAO,IAAI,EAAC,MAAZ;QAAmB,KAAK,EAAEG,SAA1B;QAAqC,WAAW,EAAE,OAAlD;QAA0D,QAAQ,EAAGgB,CAAD,IAAOf,YAAY,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV;MAAvF;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAFG;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAMD,CAxCD;;GAAMvB,S;UACaF,W;;;KADbE,S;AA0CN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}